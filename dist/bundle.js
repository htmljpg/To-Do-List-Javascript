(()=>{"use strict";var __webpack_modules__={722:()=>{eval("\n;// CONCATENATED MODULE: ./src/constants/root.js\nconst ROOT_MAIN_PAGE = document.getElementById('main-page');\n;// CONCATENATED MODULE: ./src/views/HomePage.html\n// Module\nvar code = \"<h2>Welcome, your IP is <span id=\\\"ip\\\"></span></h2>\";\n// Exports\n/* harmony default export */ const HomePage = (code);\n;// CONCATENATED MODULE: ./src/constants/api.js\nconst BASE_URL = 'http://localhost:3000/';\r\nconst IP_URL = 'https://api.ipify.org/?format=json';\n;// CONCATENATED MODULE: ./src/utils/useFetch.js\nconst useFetch = async (fetchUrl, fetchMethod, fetchBody, fetchHeaders, fetchResponseMethod) => {\r\n\r\n    const url = fetchUrl;\r\n    const method = fetchMethod ? fetchMethod : 'get';\r\n    const body = fetchBody ? JSON.stringify(fetchBody) : null;\r\n    const headers = fetchHeaders ? fetchHeaders : {\r\n        'Content-type': 'application/json'\r\n    };\r\n    \r\n    try {\r\n        const response = await fetch(url, { method, headers, body });\r\n\r\n        if (!response.ok) {\r\n            console.error(`Could not fetch ${url}, status: ${response.status}`);\r\n            return false;\r\n        }\r\n\r\n        switch(fetchResponseMethod) {\r\n            case 'text': return await response.text();\r\n            default: return await response.json();\r\n        }\r\n    } catch(error) {\r\n        console.log(error.message);\r\n        return false;\r\n    }\r\n}\r\n\r\n/* harmony default export */ const utils_useFetch = (useFetch);\n;// CONCATENATED MODULE: ./src/pages/HomePage.js\n\r\n\r\n\r\n\r\nconst HomePage_HomePage = async () => {\r\n  const divElement = document.createElement(\"div\");\r\n  divElement.innerHTML = HomePage;\r\n\r\n  const ipBlock = divElement.querySelector(\"#ip\");\r\n\r\n  const { ip } = await utils_useFetch(IP_URL);\r\n  if (ip) {\r\n    ipBlock.innerHTML = ip\r\n  } else {\r\n    ipBlock.innerHTML = 'Error';\r\n  }\r\n\r\n  return divElement;\r\n}\r\n\r\n/* harmony default export */ const pages_HomePage = (HomePage_HomePage);\n;// CONCATENATED MODULE: ./src/views/TodosPage.html\n// Module\nvar TodosPage_code = \"<div class=\\\"todos\\\"> <div class=\\\"row d-flex justify-content-between\\\"> <div class=\\\"col-auto\\\"> <h3>Add new task</h3> </div> <div class=\\\"col-auto\\\"> <button class=\\\"btn btn-primary btn-md\\\" id=\\\"add\\\" type=\\\"button\\\">+</button> </div> </div> <ul id=\\\"todos-list\\\" class=\\\"animate__animated\\\"> </ul> </div>\";\n// Exports\n/* harmony default export */ const TodosPage = (TodosPage_code);\n;// CONCATENATED MODULE: ./src/plugins/base.js\nconst $ = {};\r\n\r\n/* harmony default export */ const base = ($);\n;// CONCATENATED MODULE: ./src/plugins/modal/modal.js\n\r\n\r\nElement.prototype.appendAfter = function(element) {\r\n    element.parentNode.insertBefore(this, element.nextSibling);\r\n};\r\n\r\nfunction noop() {};\r\n\r\nfunction _footerCreateModal(buttons = []) {\r\n    if (buttons.length === 0) {\r\n        return document.createElement('div');\r\n    }\r\n\r\n    const wrap = document.createElement('div');\r\n    wrap.classList.add('modal-footer');\r\n\r\n    buttons.forEach(btn => {\r\n        const $btn = document.createElement('button');\r\n        $btn.textContent = btn.text;\r\n        $btn.classList.add('btn');\r\n        $btn.classList.add(`btn-${btn.type || 'secondary'}`);\r\n        $btn.onclick = btn.handler || noop;\r\n        btn.submitForm ? $btn.setAttribute('form', btn.submitForm) : '';\r\n\r\n        wrap.appendChild($btn);\r\n    });\r\n\r\n    return wrap;\r\n}\r\n\r\nfunction _creatModal({ title, closable, content, width, footerButtons }) {\r\n    const DEFAULT_WIDTH = '200px';\r\n    const modal = document.createElement('div');\r\n    modal.classList.add('vmodal');\r\n    modal.insertAdjacentHTML('afterbegin', `\r\n        <div class=\"modal-overlay\">\r\n            <div class=\"modal-wrapper\" data-close=\"true\">\r\n                <div class=\"modal-window\" style=\"width: ${width || DEFAULT_WIDTH};\">\r\n                    <div class=\"modal-header\">\r\n                        <span class=\"modal-title\">${title || 'Modal title'}</span>\r\n                        ${closable ? `<span class=\"modal-close\" data-close=\"true\">&times;</span>` : ''}\r\n                    </div>\r\n                    <div class=\"modal-body\" data-content>\r\n                        ${content || ''}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `);\r\n\r\n    const footer = _footerCreateModal(footerButtons);\r\n    footer.appendAfter(modal.querySelector('[data-content]'));\r\n\r\n    document.body.appendChild(modal);\r\n    return modal;\r\n}\r\n\r\nbase.modal = function(options) {\r\n    const ANIMATION_SPEED = 200;\r\n    const $modal = _creatModal(options);\r\n    let closing = false;\r\n    let destroyed = false;\r\n    \r\n    let footerBtnOKHandler = new Function;\r\n    if (options.modalName === 'alert' && options.footerButtons.type === 'primary') {\r\n        footerBtnOKHandler = options[footerButtons][handler];\r\n    }\r\n\r\n    console.log('options', options);\r\n    \r\n    \r\n\r\n    const modal = {\r\n        open() {\r\n            if (destroyed) {\r\n                return console.log('Modal is destroyed');\r\n            }\r\n            !closing && $modal.classList.add('open');\r\n            return true;\r\n        },\r\n        close() {\r\n            $modal.classList.remove('open');\r\n            $modal.classList.add('hide');\r\n            closing = true;\r\n\r\n            setTimeout(() => {\r\n                $modal.classList.remove('hide');\r\n                closing = false;\r\n                if (typeof options.onClose === 'function') {\r\n                    options.onClose();\r\n                }\r\n            }, ANIMATION_SPEED);\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const listener = event => {\r\n        if (event.target.dataset.close === 'true') {\r\n            modal.close();\r\n            footerBtnOKHandler();\r\n        }\r\n    }\r\n\r\n    $modal.addEventListener('click', listener);\r\n\r\n    return Object.assign(modal, {\r\n        destroy() {\r\n            $modal.remove();\r\n            $modal.removeEventListener('click', listener);\r\n            destroyed = true;\r\n        },\r\n        setContent(html) {\r\n            $modal.querySelector('[data-content]').innerHTML = html;\r\n        }\r\n    });\r\n};\n;// CONCATENATED MODULE: ./src/plugins/modal/confirm.js\n\r\n\r\nbase.confirm = function(options) {\r\n    return new Promise((resolve, reject) => {\r\n        const modal = base.modal({\r\n            modalName: 'confirm',\r\n            title: options.title,\r\n            width: '400px',\r\n            closable: false,\r\n            content: options.content,\r\n            onClose() {\r\n                modal.destroy();\r\n            },\r\n            footerButtons: [\r\n                {text: 'Cancel', type: 'secondary', handler() {\r\n                    modal.close();\r\n                    reject();\r\n                }},\r\n                {text: 'Delete', type: 'danger', handler() {\r\n                    modal.close();\r\n                    resolve();\r\n                }},\r\n            ]\r\n        });\r\n\r\n        setTimeout(() => {\r\n            modal.open();\r\n        }, 100);\r\n    });\r\n}\n;// CONCATENATED MODULE: ./src/plugins/modal/alert.js\n\r\n\r\nbase.alert = function(options) {\r\n    return new Promise((resolve) => {\r\n        const modal = base.modal({\r\n            modalName: 'alert',\r\n            title: options.title,\r\n            width: '400px',\r\n            closable: false,\r\n            content: options.content,\r\n            onClose() {\r\n                modal.destroy();\r\n            },\r\n            footerButtons: [\r\n                {text: 'OK', type: 'primary', handler() {\r\n                    modal.close();\r\n                    resolve();\r\n                }},\r\n            ]\r\n        });\r\n\r\n        setTimeout(() => {\r\n            modal.open();\r\n        }, 100);\r\n    });\r\n}\n;// CONCATENATED MODULE: ./src/plugins/index.js\n\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/utils/useAnim.js\nconst useAnim = (callback, block, delay = 100, animIn = 'animate__fadeIn', animOut = 'animate__fadeOut') => {\r\n    animOut && block.classList.add(animOut);\r\n    animIn && block.classList.remove(animIn);\r\n\r\n    setTimeout(function() {\r\n        animOut && block.classList.remove(animOut);\r\n        animIn && block.classList.add(animIn);\r\n\r\n        callback();\r\n    }, delay);\r\n}\r\n\r\n/* harmony default export */ const utils_useAnim = (useAnim);\n;// CONCATENATED MODULE: ./src/pages/TodosPage.js\n\r\n\r\n\r\n\r\n\r\n\r\nlet addModal = addOrEdit('add');\r\n\r\nfunction addOrEdit (type, data = {}) {\r\n    console.log('data', data);\r\n    \r\n    let modalTitle = '';\r\n    let btnPrimary = {};\r\n    let formId = '';\r\n\r\n    if (type === 'add') {\r\n        modalTitle = 'Add new task';\r\n        btnPrimary = {text: 'Add', type: 'primary', handler() {\r\n                \r\n        }, submitForm: 'addTodo'};\r\n        formId = 'addTodo';\r\n    }\r\n    if (type === 'edit') {\r\n        modalTitle = `Edit task`;\r\n        btnPrimary = {text: 'Edit', type: 'primary', handler() {\r\n                \r\n        }, submitForm: 'editTodo'};\r\n        formId = 'editTodo';\r\n    }\r\n\r\n\r\n    const modal = base.modal({\r\n        title: modalTitle,\r\n        closable: true,\r\n        width: '400px',\r\n        content: `\r\n            <form id=${formId}>\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Title</label>\r\n                    <input type=\"text\" name=\"title\" value=\"${type === 'edit' ? data.title : ''}\" class=\"form-control\" required>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Description</label>\r\n                    <textarea class=\"form-control\" rows=\"3\" name=\"description\" required>${type === 'edit' ? data.description : ''}</textarea>\r\n                </div>\r\n            </form>\r\n        `,\r\n        footerButtons: [\r\n            btnPrimary,\r\n            {text: 'Cancel', type: 'danger', handler() {\r\n                modal.close();\r\n            }}\r\n        ]\r\n    });\r\n\r\n    return modal;\r\n}\r\n\r\n\r\nfunction todoToHTML (todoList, { id, title, description }, withoutAnim) {\r\n    todoList.innerHTML = '';\r\n    const html = `\r\n        <li class=\"todo-item animate__animated\">\r\n            <div class=\"row d-flex justify-content-between\">\r\n                <div class=\"col-auto flex-grow-1\">\r\n                    <h3>${title}</h3>\r\n                    <p>${description}</p>\r\n                </div>\r\n                <div class=\"col-auto\">\r\n                    <button class=\"btn btn-md btn-primary edit\" data-title=\"${title}\" data-id=\"${id}\">\r\n                        <i class=\"fa fa-edit\"></i>\r\n                    </button>\r\n                    <button class=\"btn btn-md btn-danger delete\" data-title=\"${title}\" data-id=\"${id}\">\r\n                        <i class=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    `;\r\n\r\n    if (withoutAnim) {\r\n        todoList.insertAdjacentHTML('beforeend', html)\r\n    } else {\r\n        utils_useAnim(() => todoList.insertAdjacentHTML('beforeend', html), todoList)\r\n    }\r\n}\r\n\r\nasync function getAllTodos(todoList, withoutAnim) {\r\n    const response = await utils_useFetch(BASE_URL + 'tasks');\r\n    \r\n\r\n    if (response) {\r\n        response.length > 0 ? response.forEach(todo => todoToHTML(todoList, todo, withoutAnim)) : todoList.innerHTML = 'empty';\r\n    }\r\n}\r\n\r\nfunction getData(form) {\r\n    const title = form.title.value;\r\n    const description = form.description.value;\r\n\r\n    const formData = {\r\n        title,\r\n        description,\r\n    }\r\n\r\n    form.reset();\r\n    \r\n    return formData;\r\n}\r\n\r\nasync function addTodo(e, todoList) {\r\n    e.preventDefault();\r\n    const formData = getData(e.currentTarget);\r\n    \r\n    const response = await utils_useFetch(BASE_URL + 'tasks', 'post', formData);\r\n\r\n    responseCheckAndInfo(response, 'Add', `Task <b>${response.title}</b> added successfully!`, 'add', '');\r\n\r\n    getAllTodos(todoList);\r\n}\r\n\r\nasync function editTodo(e, todoList, id, modalBlock) {\r\n    console.log('id', e);\r\n    e.preventDefault();\r\n    const formData = getData(e.currentTarget);\r\n\r\n    const response = await utils_useFetch(BASE_URL + `tasks/${id}`, 'PUT', formData);\r\n\r\n    responseCheckAndInfo(response, 'Edit', `Task <b>${response.title}</b> edited successfully!`, 'edit', '', modalBlock);\r\n\r\n    getAllTodos(todoList);\r\n}\r\n\r\nasync function deleteTodo(todoId, todoTitle, elementParent, todoList) {\r\n    const response = await utils_useFetch(BASE_URL + `tasks/${todoId}`, 'delete');\r\n    \r\n    responseCheckAndInfo(response, 'Remove', `Task <b>${todoTitle}</b> was successfully deleted!`, 'delete', elementParent, \"\", todoList);\r\n}\r\n\r\nfunction responseCheckAndInfo(response, title, content, type, elementParent, modalBlock, todoList) {\r\n\r\n    if (response) {\r\n\r\n        if (type == 'add') {\r\n            addModal.close();\r\n        }\r\n\r\n        if (type == 'edit') {\r\n            modalBlock.destroy();\r\n        }\r\n\r\n        setTimeout(() => {\r\n            const alert = base.alert({\r\n                title,\r\n                content,\r\n            })\r\n                .then(() => {\r\n                    if (type === 'delete') {\r\n                        utils_useAnim(() => elementParent.remove(), elementParent, 500, null, \"animate__bounceOutRight\");\r\n                        setTimeout(() => {\r\n                            getAllTodos(todoList, true);\r\n                        }, 700);\r\n                    }\r\n                })\r\n            \r\n            \r\n        }, 200);\r\n\r\n    } else {\r\n        const errorInfo = base.alert({\r\n            title: `Error`,\r\n            content: 'Something went wrong. Please try again later!',\r\n        });\r\n\r\n        if (type == 'add') {\r\n            addModal.close();\r\n        }\r\n\r\n        setTimeout(() => {\r\n            errorInfo.open();\r\n        }, 200);\r\n    }\r\n}\r\n\r\nconst TodosPage_TodosPage = async () => {\r\n  const divElement = document.createElement(\"div\");\r\n  divElement.innerHTML = TodosPage;\r\n  let todoList = divElement.querySelector('#todos-list');\r\n  const addTodoForm = document.getElementById('addTodo');\r\n  let editModal = new Function;\r\n  \r\n  todoList.addEventListener('click', (e) => {\r\n    const target = e.target;\r\n\r\n    if (\r\n        (target.classList.contains('delete') || target.parentElement.classList.contains('delete')) &&\r\n        (target.dataset.id || target.parentElement.dataset.id)\r\n    ) {\r\n        const id = +target.dataset.id || +target.parentElement.dataset.id;\r\n        const title = target.dataset.title || target.parentElement.dataset.title;\r\n\r\n        base.confirm({\r\n            title: 'Are you sure ?',\r\n            content: `You delete <b>${title}</b> task`,\r\n        })\r\n            .then(() => {\r\n                deleteTodo(id, title, target.closest('.todo-item'), todoList);\r\n            })\r\n            .catch(() => {});\r\n    }\r\n\r\n    if (\r\n        (target.classList.contains('edit') || target.parentElement.classList.contains('edit')) &&\r\n        (target.dataset.id || target.parentElement.dataset.id)\r\n    ) {\r\n        const id = +target.dataset.id || +target.parentElement.dataset.id;\r\n        const title = target.dataset.title || target.parentElement.dataset.title;\r\n\r\n        (async () => {\r\n            const response = await utils_useFetch(BASE_URL + `tasks/${id}`, 'get');\r\n\r\n            const {\r\n                title,\r\n                description\r\n            } = response;\r\n            \r\n            if (response) {\r\n                editModal = addOrEdit('edit', { title, description });\r\n                editModal.open();\r\n                const editTodoForm = document.getElementById('editTodo');\r\n                editTodoForm.addEventListener('submit', (e) => editTodo(e, todoList, id, editModal));\r\n            }\r\n        })();\r\n    }\r\n  });\r\n  \r\n  const addBtn = divElement.querySelector('#add');\r\n  addBtn.addEventListener('click', () => {\r\n    addModal.open();\r\n  });\r\n  await getAllTodos(todoList);\r\n\r\n  addTodoForm.addEventListener('submit', (e) => addTodo(e, todoList));\r\n  \r\n\r\n  return divElement;\r\n};\r\n\r\n/* harmony default export */ const pages_TodosPage = (TodosPage_TodosPage);\r\n\n;// CONCATENATED MODULE: ./src/views/NotFoundPage.html\n// Module\nvar NotFoundPage_code = \"<h2>404</h2>\";\n// Exports\n/* harmony default export */ const NotFoundPage = (NotFoundPage_code);\n;// CONCATENATED MODULE: ./src/pages/NotFoundPage.js\n\r\n\r\nconst NotFoundPage_NotFoundPage = () => {\r\n  const divElement = document.createElement(\"div\");\r\n  divElement.innerHTML = NotFoundPage;\r\n  \r\n\r\n  return divElement;\r\n}\r\n\r\n/* harmony default export */ const pages_NotFoundPage = (NotFoundPage_NotFoundPage);\r\n\n;// CONCATENATED MODULE: ./src/pages/index.js\n\r\n\r\n\r\n\r\nconst pages = {\r\n    HomePage: pages_HomePage,\r\n    TodosPage: pages_TodosPage,\r\n    NotFound: pages_NotFoundPage,\r\n};\r\n\r\n/* harmony default export */ const src_pages = (pages);\r\n\n;// CONCATENATED MODULE: ./src/router/index.js\n\r\n\r\n\r\n\r\nconst router = async (route) => {\r\n    ROOT_MAIN_PAGE.innerHTML = '';\r\n\r\n    route = route === '' ? '#/' : route;\r\n    \r\n\r\n    switch(route) {\r\n        case '#/': {\r\n            return ROOT_MAIN_PAGE.appendChild(await src_pages.HomePage());\r\n        }\r\n        case '#/todos':\r\n            return ROOT_MAIN_PAGE.appendChild(await src_pages.TodosPage());\r\n        default:\r\n            return ROOT_MAIN_PAGE.appendChild(src_pages.NotFound());\r\n    }\r\n    \r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./src/main.js\n\r\n\r\n\r\n\r\n\r\n\r\nconst init = async () => {\r\n    utils_useAnim(() => router(window.location.hash), ROOT_MAIN_PAGE);\r\n\r\n    window.addEventListener('hashchange', () => {\r\n        utils_useAnim(() => router(window.location.hash), ROOT_MAIN_PAGE)\r\n    });\r\n};\r\n\r\nwindow.addEventListener('load', init);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///722\n")}},__webpack_exports__={};__webpack_modules__[722]()})();